openapi: "3.0.0"
info:
  version: 1.0.0
  title: A simple newsletter subscription API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080
    description: Development server
    variables:
      port:
        enum:
          - "8080"
          - "6060"
        default: "8080"
paths:
  /newsletter/:
    post:
    put:
    delete:
  /newsletter/{id}:
    get:
      responses:
        '200':
          description: information about this newsletter and a list of posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not-found'
        '500':
          $ref: '#/components/responses/internal-error'
  /newsletter/{id}/post:
    get:
      description: get all posts for this newsletter
      responses:
        '200':
          description: list of all posts for this newsletter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not-found'
        '500':
          $ref: '#/components/responses/internal-error'
    post:
      description: create a new post for this newsletter (authors only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthCheck'
      responses:
        '200':
          description: newsletter post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '500':
          $ref: '#/components/responses/internal-error'
  /newsletter/{id}/post/{post_id}:
    get:
      description: get a specific post from this newsletter
      responses:
        '200':
          description: newsletter post response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '400':
          $ref: '#/components/responses/bad-request'
        '404':
          $ref: '#/components/responses/not-found'
        '403':
          $ref: '#/components/responses/forbidden'
        '500':
          $ref: '#/components/responses/internal-error'
  /newsletter/{id}/subscribe:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        '200':
          description: subscription response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '400':
          $ref: '#/components/responses/bad-request'
        '500':
          $ref: '#/components/responses/internal-error'
  /newsletter/{:id}/unsubscribe:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        '200':
          description: unsubscription response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '400':
          $ref: '#/components/responses/bad-request'
        '500':
          $ref: '#/components/responses/internal-error'
  /reader:
    get:
    post:
    put:
    delete:
  /author:
    get:
    post:
    put:
    delete:
  /healthcheck:
    get:
      responses:
        '200':
          description: healthcheck response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
components:
  responses:
    bad-request:
      description: 400 BAD REQUEST
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    forbidden:
      description: 403 FORBIDDEN
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Forbidden'
    not-found:
      description: 404 NOT FOUND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
    internal-error:
      description: 500 INTERNAL SERVER ERROR
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'
  schemas:
    # base types
    HealthCheck:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          example: ok
    SubscriptionRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: user@example.com
    SubscriptionResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          example: subscribed
        email:
          type: string
          example:
    BadRequest:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: bad request
    Forbidden:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: forbidden, newsletter is hidden by author
    NotFound:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: not found
    InternalServerError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: internal server error
